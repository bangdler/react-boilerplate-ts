{
  "compilerOptions": {
    "outDir": "./dist",   // 컴파일 파일 저장경로
    "target": "es5",      // 컴파일 파일이 실행될 환경
    "module": "es6",   // 또는 commonjs
    "strict": true,       // 모든 타입 체크 옵션
    "jsx": "preserve",   // JSX 코드를 어떻게 컴파일할지 결정,  react-jsx : .js 파일로 컴파일 된다. (JSX 코드는 _jsx() 함수의 호출로 변환됨) / preserve : 변환하지 않는다. babel 에서 하는 경우
    "noImplicitAny": true, // 암묵적으로 any 타입을 가지는 것을 허락하지 않습니다.
    "lib": ["DOM", "ES5", "ES2015"],  // 컴파일 시에 포함시켜야 하는 JavaScript 내장 API들의 타입 정의들에 대한 정보를 지정한다.
    "allowJs": true,      // TypeScript 프로젝트에서 JavaScript 파일도 사용할 수 있도록 하는 설정
//    "skipLibCheck": true,   // 모든 선언 파일(.d.ts)의 타입 체킹을 스킵하도록 하는 설정
    "esModuleInterop": true,    // commonjs 모듈 형태로 이뤄진 파일을 es2015 모듈 형태로 불러올 수 있게 해줍니다.
    "allowSyntheticDefaultImports": true,  // 불러오려는 모듈에 default export가 없을 때도 import as * XXX가 아닌 import XXX를 사용할 수 있도록 하는 설정이다.
    "forceConsistentCasingInFileNames": true,  // 사용할 파일의 이름을 대소문자까지 정확하게 작성하도록 강제하는 설정
    "moduleResolution": "node",   // 모듈 해석 전략을 결정한다.
    "resolveJsonModule": true,  // 확장자가 .json인 모듈의 import를 허용하는 설정이다.
    "isolatedModules": true,
  },
  "include": ["src"],       // 어떤 파일을 컴파일할 건지
  "exclude": ["node_modules"],
  "extends": "./tsconfig.path.json"
}